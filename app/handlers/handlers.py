from aiogram import Router, F
from aiogram.types import Message
from aiogram.types.input_file import InputFile
from aiogram.filters import Command, CommandStart
import logging, config

import app.keyboards as kb
import app.database.requests as rq

router = Router()


@router.message(CommandStart())
async def start(message: Message):
	await rq.set_user(message.from_user.id, message.from_user.username)
	await message.answer_photo(photo=config.LOGO)
	await message.answer(
		"""Ukrainian Communityüá∫üá¶ in London ‚Äî —Ü–µ –µ–Ω–µ—Ä–≥—ñ–π–Ω–∞ —ñ –¥—Ä—É–∂–Ω—è —Å–ø—ñ–ª—å–Ω–æ—Ç–∞ —É–∫—Ä–∞—ó–Ω—Ü—ñ–≤, —è–∫–∞ –≤–ª–∞—à—Ç–æ–≤—É—î –Ω–µ–∑–∞–±—É—Ç–Ω—ñ –≤–µ—á—ñ—Ä–∫–∏ —Ç–∞ —Å–æ—Ü—ñ–∞–ª—å–Ω—ñ –∑–∞—Ö–æ–¥–∏ –≤ —Å–∞–º–æ–º—É —Å–µ—Ä—Ü—ñ –õ–æ–Ω–¥–æ–Ω–∞üî• 
–ú–∏ —Å—Ç–≤–æ—Ä—é—î–º–æ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É —Å–ø—Ä–∞–≤–∂–Ω—å–æ–≥–æ —Å–≤—è—Ç–∞, –¥–µ –º–æ–∂–Ω–∞ –ø–æ—Ä–∏–Ω—É—Ç–∏ –≤ —Ä—ñ–¥–Ω—É –∫—É–ª—å—Ç—É—Ä—É, –∑–Ω–∞–π—Ç–∏ –Ω–æ–≤–∏—Ö –¥—Ä—É–∑—ñ–≤, —ñ, –∑–≤—ñ—Å–Ω–æ –∂, –¥–æ–±—Ä–µ –≤—ñ–¥–ø–æ—á–∏—Ç–∏.""",
		reply_markup=kb.get_basic_keyboard()
	)
	# await message.answer(
	# 	"–ù–∞—à—ñ –∑–∞—Ö–æ–¥–∏ ‚Äî —Ü–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ –≤–µ—á—ñ—Ä–∫–∏. –¶–µ –ø–æ–¥—ñ—ó, —è–∫—ñ –æ–±‚Äô—î–¥–Ω—É—é—Ç—å –ª—é–¥–µ–π, —Å—Ç–≤–æ—Ä—é—é—Ç—å —Å–ø–æ–≥–∞–¥–∏ —Ç–∞ –¥–∞—Ä—É—é—Ç—å –≤—ñ–¥—á—É—Ç—Ç—è —î–¥–Ω–æ—Å—Ç—ñ. –ú–∏ –æ—Ä–≥–∞–Ω—ñ–∑–æ–≤—É—î–º–æ —è—Å–∫—Ä–∞–≤—ñ —Ç–µ–º–∞—Ç–∏—á–Ω—ñ –∑–∞—Ö–æ–¥–∏, –¥–µ –ª—É–Ω–∞—î —É–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –º—É–∑–∏–∫–∞, –≤—ñ–¥–±—É–≤–∞—é—Ç—å—Å—è —Ç–∞–Ω—Ü—ñ, –∫–æ–Ω–∫—É—Ä—Å–∏ —ñ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ —Å—é—Ä–ø—Ä–∏–∑–∏. –¢–∞–∫–æ–∂ –º–∏ –ø—Ä–æ–≤–æ–¥–∏–º–æ –±–ª–∞–≥–æ–¥—ñ–π–Ω—ñ –∑—É—Å—Ç—Ä—ñ—á—ñ, –≤–µ—á–æ—Ä–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –∫—É–ª—å—Ç—É—Ä–∏ —Ç–∞ —ñ–Ω—à—ñ –ø–æ–¥—ñ—ó, —â–æ –¥–æ–∑–≤–æ–ª—è—é—Ç—å –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –∑–≤‚Äô—è–∑–æ–∫ –∑ –±–∞—Ç—å–∫—ñ–≤—â–∏–Ω–æ—é —ñ —Ä–æ–±–∏—Ç–∏ —â–æ—Å—å –≤–∞–∂–ª–∏–≤–µ –¥–ª—è –Ω–∞—à–æ—ó —Å–ø—ñ–ª—å–Ω–æ—Ç–∏.")
	await message.answer(
		"–ü—Ä–∏—î–¥–Ω—É–π—Ç–µ—Å—å –¥–æ –Ω–∞—Å —ñ —Å—Ç–∞–Ω—å—Ç–µ —á–∞—Å—Ç–∏–Ω–æ—é –Ω–µ–∑–∞–±—É—Ç–Ω—ñ—Ö –ø–æ–¥—ñ–π, –¥–µ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –¥—É—à–∞ –æ–∂–∏–≤–∞—î –≤ —Å–∞–º–æ–º—É —Å–µ—Ä—Ü—ñ –õ–æ–Ω–¥–æ–Ω–∞!ü§©",
		reply_markup=kb.get_follow_keyboard()
	)


@router.message(F.text == "About")
async def about(message: Message):
	await start(message)


@router.message(F.text == "Contact Us")
async def contact(message: Message):
	await message.answer("Ukrainian Communityüá∫üá¶–∑–∞–≤–∂–¥–∏ –≤—ñ–¥–∫—Ä–∏—Ç–µ –¥–ª—è —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è —É —Ä–∞–∑—ñ –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è —è–∫–∏—Ö–æ—Å—å –ø—Ä–æ–±–ª–µ–º –∞–±–æ –ø–∏—Ç–∞–Ω–Ω—å")
	await message.answer("–¢–∞–∫–æ–∂ –±—É–¥–µ–º–æ –¥—É–∂–µ —Ä–∞–¥—ñ —è–∫—â–æ –≤–∏ –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è –∑ –Ω–∞–º–∏ –≤–∞—à–∏–º–∏ –≤—Ä–∞–∂–µ–Ω–Ω—è–º–∏ –∞–±–æ —ñ–¥–µ—è–º–∏ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω—ñ —ñ–≤–µ–Ω—Ç–∏. –ú–∏ –ø—Ä–∏—Å–ª—É—Ö–æ–≤—É—î–º–æ—Å—å –¥–æ –í–∞—Å —ñ —Ö–æ—á–µ–º–æ –∑—Ä–æ–±–∏—Ç–∏ –≤—Å–µ –Ω–∞–π–∫—Ä–∞—â–µ, –∞–±–∏ –≤–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –Ω–µ–∑–∞–±—É—Ç–Ω—ñ –≤—Ä–∞–∂–µ–Ω–Ω—è –≤—ñ–¥ –Ω–∞—à–æ—ó –¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ")
	await message.answer("PS: –Ø–∫—â–æ —É –≤–∞—Å —î –±–∞–∂–∞–Ω–Ω—è –¥–æ–ø–æ–º–æ–≥—Ç–∏ –Ω–∞—à—ñ–π –∫–æ–º–∞–Ω–¥—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –Ω–∞–≤—ñ—Ç—å –ø—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ –Ω–∞—Å!")
	await message.answer(
		text="–ü–∏—à—ñ—Ç—å –Ω–∞–º –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –∞–±–æ –≤ –æ—Å–æ–±–∏—Å—Ç—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ —ñ–Ω—Å—Ç–∞–≥—Ä–∞–º—ñ",
		reply_markup=kb.get_contacts())


# General fallback handler for unhandled messages
@router.message()
async def unhandled_message(message: Message):
	logging.info(f"Unhandled message: {message.text}")
	with open("unhandled.log", "a") as f:
		f.write(f"{message.date} - {message.from_user.username} unhandled: {message.text}\n")
		f.flush()
	await message.answer("I don't know what you're talking about mate...")
